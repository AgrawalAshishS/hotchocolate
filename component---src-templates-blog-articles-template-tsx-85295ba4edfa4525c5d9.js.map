{"version":3,"sources":["webpack:///./src/components/misc/pagination.tsx","webpack:///./src/templates/blog-articles-template.tsx","webpack:///./src/components/widgets/blog-articles.tsx"],"names":["Pagination","currentPage","linkPrefix","totalPages","items","i","page","suffix","push","link","Container","map","item","Page","key","className","undefined","PageLink","to","styled","ol","li","Link","BlogArticlesTemplate","pageContext","data","title","numPages","pageQuery","BlogArticles","edges","allMarkdownRemark","node","existingTags","frontmatter","tags","filter","tag","length","Article","id","path","featuredImage","childImageSharp","fluid","author","authorImageUrl","authorUrl","date","readingTime","fields","text","ul"],"mappings":"iKAGaA,EAAa,SAAC,GAEvB,IAFoE,IAA3CC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,WAC5CC,EAAQ,GACLC,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CACjC,IAAMC,EAAOD,EAAI,EACXE,EAAkB,IAATD,EAAa,GAAK,IAAMA,EACvCF,EAAMI,KAAK,CAAEF,OAAMG,KAAMP,EAAaK,IAE1C,OAAQ,kBAACG,EAAD,KACLN,EAAMO,KAAI,SAAAC,GAAI,OAAK,kBAACC,EAAD,CAAMC,IAAG,QAAUF,EAAKN,KAAQS,UAAWH,EAAKN,OAASL,EAAc,cAAWe,GAClG,kBAACC,EAAD,CAAUC,GAAIN,EAAKH,MAAOG,EAAKN,YAInCI,EAAYS,IAAOC,GAAV,wEAAGD,CAAH,mDAKTN,EAAOM,IAAOE,GAAV,mEAAGF,CAAH,wIAYJF,EAAWE,YAAOG,QAAV,uEAAGH,CAAH,+F,oCChCd,0CAYeI,UAPc,SAAC,GAA2B,IAAzBC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,KACzC,OAAQ,kBAAC,IAAD,KACN,kBAAC,IAAD,CAAKC,MAAM,kBACX,kBAAC,IAAD,CAAcD,KAAMA,IACpB,kBAAC,EAAD,CAAYxB,YAAauB,EAAYvB,YAAaC,WAAW,QAAQC,WAAYqB,EAAYG,aAJnG,IAQaC,EAAY,c,kCCdzB,4IAOaC,EAAe,SAAC,GAAqC,IACtDC,EADsD,EAAnCL,KAAQM,kBAC3BD,MACR,OAAQ,kBAACpB,EAAD,KACLoB,EAAMnB,KAAI,YAAc,YAAXqB,EAAW,EAAXA,KACNC,GAAeD,SAAA,UAAAA,EAAME,mBAAN,eAAmBC,MAClCH,EAAKE,YAAYC,KAAKC,QAAO,SAAAC,GAAG,OAAIA,GAAOA,EAAIC,OAAS,KACxD,GACN,OAAQ,kBAACC,EAAD,CAASzB,IAAG,WAAakB,EAAKQ,IAClC,kBAAC,IAAD,CAAMtB,GAAIc,EAAKE,YAAYO,OACxBT,SAAA,UAAAA,EAAME,mBAAN,mBAAmBQ,qBAAnB,mBAAkCC,uBAAlC,eAAmDC,QAAU,kBAAC,IAAD,CAAKA,MAAOZ,EAAKE,YAAYQ,cAAcC,gBAC1GC,QACC,kBAAC,IAAD,KAAeZ,EAAKE,YAAYR,QAElC,kBAAC,IAAD,CAAqBmB,OAAQb,EAAKE,YAAYW,OAAQC,eAAgBd,EAAKE,YAAYY,eAAgBC,UAAWf,EAAKE,YAAYa,UAAWC,KAAMhB,EAAKE,YAAYc,KAAMC,YAAajB,EAAKkB,OAAOD,YAAYE,OAChN,kBAAC,IAAD,CAAiBhB,KAAMF,UAK7BvB,EAAYS,IAAOiC,GAAV,2EAAGjC,CAAH,gHASToB,EAAUpB,IAAOE,GAAV,yEAAGF,CAAH","file":"component---src-templates-blog-articles-template-tsx-85295ba4edfa4525c5d9.js","sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nexport const Pagination = ({ currentPage, linkPrefix, totalPages, }) => {\n    const items = [];\n    for (let i = 0; i < totalPages; i++) {\n        const page = i + 1;\n        const suffix = page === 1 ? \"\" : \"/\" + page;\n        items.push({ page, link: linkPrefix + suffix });\n    }\n    return (<Container>\n      {items.map(item => (<Page key={`page-${item.page}`} className={item.page === currentPage ? \"active\" : undefined}>\n          <PageLink to={item.link}>{item.page}</PageLink>\n        </Page>))}\n    </Container>);\n};\nconst Container = styled.ol `\n  margin: 20px 0;\n  padding: 0;\n  list-style-type: none;\n`;\nconst Page = styled.li `\n  display: inline-block;\n  margin: 0 5px;\n  border-radius: 5px;\n  padding: 0;\n  background-color: #f40010;\n\n  &.active,\n  &:hover {\n    background-color: #b7020a;\n  }\n`;\nconst PageLink = styled(Link) `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 30px;\n  height: 30px;\n  color: #fff;\n`;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport { Pagination } from \"../components/misc/pagination\";\nimport { SEO } from \"../components/misc/seo\";\nimport { Layout } from \"../components/structure/layout\";\nimport { BlogArticles } from \"../components/widgets/blog-articles\";\nconst BlogArticlesTemplate = ({ pageContext, data, }) => {\n    return (<Layout>\n      <SEO title=\"Blog Articles\"/>\n      <BlogArticles data={data}/>\n      <Pagination currentPage={pageContext.currentPage} linkPrefix=\"/blog\" totalPages={pageContext.numPages}></Pagination>\n    </Layout>);\n};\nexport default BlogArticlesTemplate;\nexport const pageQuery = graphql `\n  query getBlogArticles($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      limit: $limit\n      skip: $skip\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          fields {\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            author\n            authorImageUrl\n            authorUrl\n            date(formatString: \"MMMM DD, YYYY\")\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            path\n            tags\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { ArticleTitle } from \"../misc/blog-article-elements\";\nimport { BlogArticleMetadata } from \"../misc/blog-article-metadata\";\nimport { BlogArticleTags } from \"../misc/blog-article-tags\";\nimport { Link } from \"../misc/link\";\nexport const BlogArticles = ({ data: { allMarkdownRemark }, }) => {\n    const { edges } = allMarkdownRemark;\n    return (<Container>\n      {edges.map(({ node }) => {\n        const existingTags = node?.frontmatter?.tags\n            ? node.frontmatter.tags.filter(tag => tag && tag.length > 0)\n            : [];\n        return (<Article key={`article-${node.id}`}>\n            <Link to={node.frontmatter.path}>\n              {node?.frontmatter?.featuredImage?.childImageSharp?.fluid && (<Img fluid={node.frontmatter.featuredImage.childImageSharp\n            .fluid}/>)}\n              <ArticleTitle>{node.frontmatter.title}</ArticleTitle>\n            </Link>\n            <BlogArticleMetadata author={node.frontmatter.author} authorImageUrl={node.frontmatter.authorImageUrl} authorUrl={node.frontmatter.authorUrl} date={node.frontmatter.date} readingTime={node.fields.readingTime.text}/>\n            <BlogArticleTags tags={existingTags}/>\n          </Article>);\n    })}\n    </Container>);\n};\nconst Container = styled.ul `\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: column;\n  margin: 0;\n  width: 100%;\n  max-width: 800px;\n  list-style-type: none;\n`;\nconst Article = styled.li `\n  margin-bottom: 15px;\n\n  @media only screen and (min-width: 800px) {\n    border: 1px solid #ccc;\n  }\n`;\n"],"sourceRoot":""}