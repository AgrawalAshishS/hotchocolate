{"version":3,"sources":["webpack:///./src/templates/blog-tag-template.tsx","webpack:///./src/components/misc/pagination.tsx","webpack:///./src/components/widgets/blog-articles.tsx","webpack:///./src/components/misc/article-elements.tsx","webpack:///./src/components/misc/blog-article-metadata.tsx","webpack:///./src/components/misc/blog-article-tags.tsx"],"names":["BlogTagTemplate","tag","pageContext","allMarkdownRemark","data","title","pageQuery","Pagination","currentPage","linkPrefix","totalPages","items","i","page","suffix","push","link","Container","map","item","Page","key","className","undefined","PageLink","to","styled","ol","li","Link","BlogArticles","edges","node","existingTags","frontmatter","tags","filter","length","featuredImage","childImageSharp","fluid","Article","id","path","ul","ArticleWrapper","div","article","ArticleTitle","h1","ArticleContent","BlogArticleMetadata","fields","Metadata","AuthorLink","authorUrl","AuthorImage","src","authorImageUrl","author","date","readingTime","text","img","BlogArticleTags","Tags","Tag","TagLink"],"mappings":"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","file":"component---src-templates-blog-tag-template-tsx-33d57a1be8a1b2de1fca.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport { SEO } from \"../components/misc/seo\";\nimport { Layout } from \"../components/structure/layout\";\nimport { BlogArticles } from \"../components/widgets/blog-articles\";\nconst BlogTagTemplate = ({ pageContext: { tag }, data: { allMarkdownRemark }, }) => {\n    return (<Layout>\n      <SEO title={`Blog Articles By Tag: ${tag}`}/>\n      <BlogArticles data={allMarkdownRemark}/>\n    </Layout>);\n};\nexport default BlogTagTemplate;\nexport const pageQuery = graphql `\n  query getBlogArticlesByTag($tag: String) {\n    allMarkdownRemark(\n      limit: 100\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      ...BlogArticles\n    }\n  }\n`;\n","import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nexport const Pagination = ({ currentPage, linkPrefix, totalPages, }) => {\n    const items = [];\n    for (let i = 0; i < totalPages; i++) {\n        const page = i + 1;\n        const suffix = page === 1 ? \"\" : \"/\" + page;\n        items.push({ page, link: linkPrefix + suffix });\n    }\n    return (<Container>\n      {items.map(item => (<Page key={`page-${item.page}`} className={item.page === currentPage ? \"active\" : undefined}>\n          <PageLink to={item.link}>{item.page}</PageLink>\n        </Page>))}\n    </Container>);\n};\nconst Container = styled.ol `\n  margin: 20px 0;\n  padding: 0;\n  list-style-type: none;\n`;\nconst Page = styled.li `\n  display: inline-block;\n  margin: 0 5px;\n  border-radius: 5px;\n  padding: 0;\n  background-color: #f40010;\n\n  &.active,\n  &:hover {\n    background-color: #b7020a;\n  }\n`;\nconst PageLink = styled(Link) `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 30px;\n  height: 30px;\n  line-height: 30px;\n  color: #fff;\n`;\n","import { graphql } from \"gatsby\";\nimport Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { ArticleTitle } from \"../misc/article-elements\";\nimport { BlogArticleMetadata } from \"../misc/blog-article-metadata\";\nimport { BlogArticleTags } from \"../misc/blog-article-tags\";\nimport { Link } from \"../misc/link\";\nimport { Pagination } from \"../misc/pagination\";\nexport const BlogArticles = ({ currentPage, data: { edges }, totalPages, }) => {\n    return (<>\n      <Container>\n        {edges.map(({ node }) => {\n        const existingTags = node?.frontmatter?.tags\n            ? node.frontmatter.tags.filter((tag) => tag && tag.length > 0)\n            : [];\n        const featuredImage = node?.frontmatter.featuredImage\n            ?.childImageSharp?.fluid;\n        return (<Article key={`article-${node.id}`}>\n              <Link to={node.frontmatter.path}>\n                {featuredImage && <Img fluid={featuredImage}/>}\n                <ArticleTitle>{node.frontmatter.title}</ArticleTitle>\n              </Link>\n              <BlogArticleMetadata data={node}/>\n              <BlogArticleTags tags={existingTags}/>\n            </Article>);\n    })}\n      </Container>\n      {currentPage && totalPages && (<Pagination currentPage={currentPage} linkPrefix=\"/blog\" totalPages={totalPages}/>)}\n    </>);\n};\nexport const BlogArticlesGraphQLFragment = graphql `\n  fragment BlogArticles on MarkdownRemarkConnection {\n    edges {\n      node {\n        id\n        frontmatter {\n          featuredImage {\n            childImageSharp {\n              fluid(maxWidth: 800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n          path\n          title\n          ...BlogArticleTags\n        }\n        ...BlogArticleMetadata\n      }\n    }\n  }\n`;\nconst Container = styled.ul `\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: column;\n  margin: 0;\n  width: 100%;\n  max-width: 800px;\n  list-style-type: none;\n`;\nconst Article = styled.li `\n  margin-bottom: 15px;\n\n  @media only screen and (min-width: 800px) {\n    border: 1px solid #ccc;\n  }\n`;\n","import styled from \"styled-components\";\nexport const ArticleWrapper = styled.div `\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n`;\nexport const Article = styled.article `\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n  margin-bottom: 40px;\n  padding-bottom: 20px;\n\n  @media only screen and (min-width: 800px) {\n    border: 1px solid #ccc;\n    border-top: 0 none;\n  }\n`;\nexport const ArticleTitle = styled.h1 `\n  margin-top: 20px;\n  margin-right: 20px;\n  margin-left: 20px;\n  font-size: 2em;\n\n  @media only screen and (min-width: 800px) {\n    margin-right: 50px;\n    margin-left: 50px;\n  }\n`;\nexport const ArticleContent = styled.div `\n  > * {\n    padding-right: 20px;\n    padding-left: 20px;\n  }\n\n  > h1 > a.anchor.before,\n  > h2 > a.anchor.before,\n  > h3 > a.anchor.before,\n  > h4 > a.anchor.before,\n  > h5 > a.anchor.before,\n  > h6 > a.anchor.before {\n    padding-right: 4px;\n    transform: translateX(0px);\n  }\n\n  > table {\n    margin-right: 20px;\n    margin-left: 20px;\n    padding-right: 0;\n    padding-left: 0;\n    width: calc(100% - 40px);\n  }\n\n  > .gatsby-highlight {\n    padding-right: 0;\n    padding-left: 0;\n\n    > pre {\n      padding: 30px 20px;\n    }\n  }\n\n  @media only screen and (min-width: 800px) {\n    > * {\n      padding-right: 50px;\n      padding-left: 50px;\n    }\n\n    > h1 > a.anchor.before,\n    > h2 > a.anchor.before,\n    > h3 > a.anchor.before,\n    > h4 > a.anchor.before,\n    > h5 > a.anchor.before,\n    > h6 > a.anchor.before {\n      transform: translateX(30px);\n    }\n\n    > table {\n      margin-right: 50px;\n      margin-left: 50px;\n      padding-right: 0;\n      padding-left: 0;\n      width: calc(100% - 100px);\n    }\n\n    > .gatsby-highlight {\n      > pre {\n        padding-right: 50px;\n        padding-left: 50px;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"../misc/link\";\nimport { graphql } from \"gatsby\";\nexport const BlogArticleMetadata = ({ data: { fields, frontmatter }, }) => {\n    return (<Metadata>\n      <AuthorLink to={frontmatter.authorUrl}>\n        <AuthorImage src={frontmatter.authorImageUrl}/>\n        {frontmatter.author}\n      </AuthorLink>{\" \"}\n      ・ {frontmatter.date} ・ {fields.readingTime.text}\n    </Metadata>);\n};\nexport const BlogArticleMetadataGraphQLFragment = graphql `\n  fragment BlogArticleMetadata on MarkdownRemark {\n    fields {\n      readingTime {\n        text\n      }\n    }\n    frontmatter {\n      author\n      authorImageUrl\n      authorUrl\n      date(formatString: \"MMMM DD, YYYY\")\n    }\n  }\n`;\nconst Metadata = styled.div `\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0 20px 20px;\n  font-size: 0.778em;\n\n  @media only screen and (min-width: 800px) {\n    margin: 0 50px 20px;\n  }\n`;\nconst AuthorLink = styled(Link) `\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: row;\n  align-items: center;\n  color: #666;\n`;\nconst AuthorImage = styled.img `\n  flex: 0 0 auto;\n  margin-right: 0.5em;\n  border-radius: 15px;\n  width: 30px;\n`;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"./link\";\nexport const BlogArticleTags = ({ tags, }) => {\n    return (<>\n      {tags.length > 0 && (<Tags>\n          {tags.map(tag => (<Tag key={tag}>\n              <TagLink to={`/blog/tags/${tag}`}>{tag}</TagLink>\n            </Tag>))}\n        </Tags>)}\n    </>);\n};\nexport const BlogArticleTagsGraphQLFragment = graphql `\n  fragment BlogArticleTags on MarkdownRemarkFrontmatter {\n    tags\n  }\n`;\nconst Tags = styled.ul `\n  margin: 0 20px 20px;\n  list-style-type: none;\n\n  @media only screen and (min-width: 800px) {\n    margin: 0 50px 20px;\n  }\n`;\nconst Tag = styled.li `\n  display: inline-block;\n  margin: 0 5px 5px 0;\n  border-radius: 4px;\n  padding: 0;\n  background-color: #f40010;\n  font-size: 0.722em;\n  letter-spacing: 0.05em;\n  color: #fff;\n`;\nconst TagLink = styled(Link) `\n  display: block;\n  padding: 5px 15px;\n  color: #fff;\n`;\n"],"sourceRoot":""}