{"version":3,"sources":["webpack:///./src/components/widgets/blog-article-link.tsx","webpack:///./src/pages/blog.tsx"],"names":["BlogArticleLink","date","path","title","to","Title","PublishDate","styled","h1","div","BlogPage","articles","data","allMarkdownRemark","edges","BlogArticleList","filter","article","node","frontmatter","map","key","id","pageQuery","section"],"mappings":"6KAGaA,EAAkB,SAAC,GAA2B,IAAzBC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAC1C,OAAQ,kBAAC,IAAD,CAAMC,GAAIF,GAChB,kBAACG,EAAD,KAAQF,GACR,kBAACG,EAAD,KAAcL,KAGdI,EAAQE,IAAOC,GAAV,+EAAGD,CAAH,MACLD,EAAcC,IAAOE,IAAV,qFAAGF,CAAH,MCTjB,0CAeeG,UAVE,SAAC,GAA2D,IAArBC,EAAqB,EAAzDC,KAAQC,kBAAqBC,MAC7C,OAAQ,kBAAC,IAAD,KACN,kBAAC,IAAD,CAAKX,MAAM,SACX,kBAACY,EAAD,KACGJ,EACAK,QAAO,SAAAC,GAAO,QAAMA,EAAQC,KAAKC,eACjCC,KAAI,SAAAH,GAAO,OAAK,kBAAC,EAAD,CAAiBI,IAAKJ,EAAQC,KAAKI,GAAIrB,KAAMgB,EAAQC,KAAKC,YAAYlB,KAAMC,KAAMe,EAAQC,KAAKC,YAAYjB,KAAMC,MAAOc,EAAQC,KAAKC,YAAYhB,cAN1K,IAWaoB,EAAY,aAiBnBR,EAAkBR,IAAOiB,QAAV,4EAAGjB,CAAH","file":"component---src-pages-blog-tsx-f915a75886e82ad11c5c.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"../misc/link\";\nexport const BlogArticleLink = ({ date, path, title, }) => {\n    return (<Link to={path}>\n      <Title>{title}</Title>\n      <PublishDate>{date}</PublishDate>\n    </Link>);\n};\nconst Title = styled.h1 ``;\nconst PublishDate = styled.div ``;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { SEO } from \"../components/misc/seo\";\nimport { Layout } from \"../components/structure/layout\";\nimport { BlogArticleLink } from \"../components/widgets/blog-article-link\";\nconst BlogPage = ({ data: { allMarkdownRemark: { edges: articles }, }, }) => {\n    return (<Layout>\n      <SEO title=\"Blog\"/>\n      <BlogArticleList>\n        {articles\n        .filter(article => !!article.node.frontmatter) // You can filter your posts based on some criteria\n        .map(article => (<BlogArticleLink key={article.node.id} date={article.node.frontmatter.date} path={article.node.frontmatter.path} title={article.node.frontmatter.title}/>))}\n      </BlogArticleList>\n    </Layout>);\n};\nexport default BlogPage;\nexport const pageQuery = graphql `\n  query getAllBlogArticles {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n          }\n        }\n      }\n    }\n  }\n`;\nconst BlogArticleList = styled.section `\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: column;\n  width: 100%;\n  max-width: 1100px;\n`;\n"],"sourceRoot":""}