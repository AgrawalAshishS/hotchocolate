{"version":3,"sources":["webpack:///./src/components/misc/pagination.tsx","webpack:///./src/templates/blog-articles-template.tsx","webpack:///./src/components/widgets/blog-articles.tsx"],"names":["Pagination","currentPage","linkPrefix","totalPages","items","i","page","suffix","push","link","Container","map","item","Page","className","undefined","PageLink","to","styled","ol","li","Link","BlogArticlesTemplate","pageContext","data","title","numPages","pageQuery","BlogArticles","edges","allMarkdownRemark","node","existingTags","frontmatter","tags","filter","tag","length","Article","key","id","path","featuredImage","childImageSharp","fluid","Title","Metadata","AuthorLink","authorUrl","AuthorImage","src","authorImageUrl","author","date","fields","readingTime","text","Tags","Tag","TagLink","ul","h1","div","img"],"mappings":"iKAGaA,EAAa,SAAC,GAEvB,IAFoE,IAA3CC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,WAC5CC,EAAQ,GACLC,EAAI,EAAGA,EAAIF,EAAYE,IAAK,CACjC,IAAMC,EAAOD,EAAI,EACXE,EAAkB,IAATD,EAAa,GAAK,IAAMA,EACvCF,EAAMI,KAAK,CAAEF,OAAMG,KAAMP,EAAaK,IAE1C,OAAQ,kBAACG,EAAD,KACLN,EAAMO,KAAI,SAAAC,GAAI,OAAK,kBAACC,EAAD,CAAMC,UAAWF,EAAKN,OAASL,EAAc,cAAWc,GACxE,kBAACC,EAAD,CAAUC,GAAIL,EAAKH,MAAOG,EAAKN,YAInCI,EAAYQ,IAAOC,GAAV,wEAAGD,CAAH,mDAKTL,EAAOK,IAAOE,GAAV,mEAAGF,CAAH,wIAYJF,EAAWE,YAAOG,QAAV,uEAAGH,CAAH,+F,oCChCd,0CAYeI,UAPc,SAAC,GAA2B,IAAzBC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,KACzC,OAAQ,kBAAC,IAAD,KACN,kBAAC,IAAD,CAAKC,MAAM,kBACX,kBAAC,IAAD,CAAcD,KAAMA,IACpB,kBAAC,EAAD,CAAYvB,YAAasB,EAAYtB,YAAaC,WAAW,QAAQC,WAAYoB,EAAYG,aAJnG,IAQaC,EAAY,c,kCCdzB,wGAIaC,EAAe,SAAC,GAAqC,IACtDC,EADsD,EAAnCL,KAAQM,kBAC3BD,MACR,OAAQ,kBAACnB,EAAD,KACLmB,EAAMlB,KAAI,YAAc,YAAXoB,EAAW,EAAXA,KACNC,GAAeD,SAAA,UAAAA,EAAME,mBAAN,eAAmBC,MAClCH,EAAKE,YAAYC,KAAKC,QAAO,SAAAC,GAAG,OAAIA,GAAOA,EAAIC,OAAS,KACxD,GACN,OAAQ,kBAACC,EAAD,CAASC,IAAKR,EAAKS,IACvB,kBAAC,IAAD,CAAMvB,GAAIc,EAAKE,YAAYQ,OACxBV,SAAA,UAAAA,EAAME,mBAAN,mBAAmBS,qBAAnB,mBAAkCC,uBAAlC,eAAmDC,QAAU,kBAAC,IAAD,CAAKA,MAAOb,EAAKE,YAAYS,cAAcC,gBAC1GC,QACC,kBAACC,EAAD,KAAQd,EAAKE,YAAYR,QAE3B,kBAACqB,EAAD,KACE,kBAACC,EAAD,CAAY9B,GAAIc,EAAKE,YAAYe,WAC/B,kBAACC,EAAD,CAAaC,IAAKnB,EAAKE,YAAYkB,iBAClCpB,EAAKE,YAAYmB,QACN,IAJhB,KAKKrB,EAAKE,YAAYoB,KALtB,MAK+BtB,EAAKuB,OAAOC,YAAYC,MAEtDxB,EAAaK,OAAS,GAAM,kBAACoB,EAAD,KACxBzB,EAAarB,KAAI,SAAAyB,GAAG,OAAK,kBAACsB,EAAD,KACtB,kBAACC,EAAD,CAAS1C,GAAE,cAAgBmB,GAAQA,cAOjD1B,EAAYQ,IAAO0C,GAAV,2EAAG1C,CAAH,gHASToB,EAAUpB,IAAOE,GAAV,yEAAGF,CAAH,yFAOP2B,EAAQ3B,IAAO2C,GAAV,uEAAG3C,CAAH,wJAWL4B,EAAW5B,IAAO4C,IAAV,0EAAG5C,CAAH,2JAWR6B,EAAa7B,YAAOG,KAAV,4EAAGH,CAAH,kFAOV+B,EAAc/B,IAAO6C,IAAV,6EAAG7C,CAAH,qEAMXuC,EAAOvC,IAAO0C,GAAV,sEAAG1C,CAAH,2GAQJwC,EAAMxC,IAAOE,GAAV,qEAAGF,CAAH,oJAUHyC,EAAUzC,YAAOG,KAAV,yEAAGH,CAAH","file":"component---src-templates-blog-articles-template-tsx-a225c885a670e77f812e.js","sourcesContent":["import { Link } from \"gatsby\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nexport const Pagination = ({ currentPage, linkPrefix, totalPages, }) => {\n    const items = [];\n    for (let i = 0; i < totalPages; i++) {\n        const page = i + 1;\n        const suffix = page === 1 ? \"\" : \"/\" + page;\n        items.push({ page, link: linkPrefix + suffix });\n    }\n    return (<Container>\n      {items.map(item => (<Page className={item.page === currentPage ? \"active\" : undefined}>\n          <PageLink to={item.link}>{item.page}</PageLink>\n        </Page>))}\n    </Container>);\n};\nconst Container = styled.ol `\n  margin: 20px 0;\n  padding: 0;\n  list-style-type: none;\n`;\nconst Page = styled.li `\n  display: inline-block;\n  margin: 0 5px;\n  border-radius: 5px;\n  padding: 0;\n  background-color: #f40010;\n\n  &.active,\n  &:hover {\n    background-color: #b7020a;\n  }\n`;\nconst PageLink = styled(Link) `\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 30px;\n  height: 30px;\n  color: #fff;\n`;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport { Pagination } from \"../components/misc/pagination\";\nimport { SEO } from \"../components/misc/seo\";\nimport { Layout } from \"../components/structure/layout\";\nimport { BlogArticles } from \"../components/widgets/blog-articles\";\nconst BlogArticlesTemplate = ({ pageContext, data, }) => {\n    return (<Layout>\n      <SEO title=\"Blog Articles\"/>\n      <BlogArticles data={data}/>\n      <Pagination currentPage={pageContext.currentPage} linkPrefix=\"/blog\" totalPages={pageContext.numPages}></Pagination>\n    </Layout>);\n};\nexport default BlogArticlesTemplate;\nexport const pageQuery = graphql `\n  query getBlogArticles($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          fields {\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            author\n            authorImageUrl\n            authorUrl\n            date(formatString: \"MMMM DD, YYYY\")\n            featuredImage {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            path\n            tags\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import Img from \"gatsby-image\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"../misc/link\";\nexport const BlogArticles = ({ data: { allMarkdownRemark }, }) => {\n    const { edges } = allMarkdownRemark;\n    return (<Container>\n      {edges.map(({ node }) => {\n        const existingTags = node?.frontmatter?.tags\n            ? node.frontmatter.tags.filter(tag => tag && tag.length > 0)\n            : [];\n        return (<Article key={node.id}>\n            <Link to={node.frontmatter.path}>\n              {node?.frontmatter?.featuredImage?.childImageSharp?.fluid && (<Img fluid={node.frontmatter.featuredImage.childImageSharp\n            .fluid}/>)}\n              <Title>{node.frontmatter.title}</Title>\n            </Link>\n            <Metadata>\n              <AuthorLink to={node.frontmatter.authorUrl}>\n                <AuthorImage src={node.frontmatter.authorImageUrl}/>\n                {node.frontmatter.author}\n              </AuthorLink>{\" \"}\n              ・ {node.frontmatter.date} ・ {node.fields.readingTime.text}\n            </Metadata>\n            {existingTags.length > 0 && (<Tags>\n                {existingTags.map(tag => (<Tag>\n                    <TagLink to={`/blog/tags/${tag}`}>{tag}</TagLink>\n                  </Tag>))}\n              </Tags>)}\n          </Article>);\n    })}\n    </Container>);\n};\nconst Container = styled.ul `\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: column;\n  margin: 0;\n  width: 100%;\n  max-width: 800px;\n  list-style-type: none;\n`;\nconst Article = styled.li `\n  margin-bottom: 15px;\n\n  @media only screen and (min-width: 800px) {\n    border: 1px solid #ccc;\n  }\n`;\nconst Title = styled.h1 `\n  margin-top: 20px;\n  margin-right: 20px;\n  margin-left: 20px;\n  font-size: 1.667em;\n\n  @media only screen and (min-width: 800px) {\n    margin-right: 50px;\n    margin-left: 50px;\n  }\n`;\nconst Metadata = styled.div `\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 0 20px 20px;\n  font-size: 0.778em;\n\n  @media only screen and (min-width: 800px) {\n    margin: 0 50px 20px;\n  }\n`;\nconst AuthorLink = styled(Link) `\n  display: flex;\n  flex: 0 0 auto;\n  flex-direction: row;\n  align-items: center;\n  color: #666;\n`;\nconst AuthorImage = styled.img `\n  flex: 0 0 auto;\n  margin-right: 0.5em;\n  border-radius: 15px;\n  width: 30px;\n`;\nconst Tags = styled.ul `\n  margin: 0 20px 20px;\n  list-style-type: none;\n\n  @media only screen and (min-width: 800px) {\n    margin: 0 50px 20px;\n  }\n`;\nconst Tag = styled.li `\n  display: inline-block;\n  margin: 0 5px 0 0;\n  border-radius: 4px;\n  padding: 0;\n  background-color: #f40010;\n  font-size: 0.722em;\n  letter-spacing: 0.05em;\n  color: #fff;\n`;\nconst TagLink = styled(Link) `\n  display: block;\n  padding: 5px 15px;\n  color: #fff;\n`;\n"],"sourceRoot":""}